'use strict';
app.controller('UserController',['$scope','UserService','$location','$rootScope','$cookieStore','$http',
	function($scope, UserService, $location, $rootScope,$cookieStore, $http) {
	console.log("Inside UserController")
	this.user={
		id : '',
		name : '',
		password : '',
		email : '',
		contact : '',
		role : '',
		address : ''
	}
	this.createUser = function(user) {
		console.log("Inside createUser function of UserController");
		UserService.createUser(user)
		.then(
				function(d) {
					$location.path("/")
				},
				function(errResponse) {
					console.error('Error while creating user');
				});
	};
	
	this.submit = function() {
		{
		console.log("Submit user");
		this.createUser(this.user);
		}
		this.reset();
	};
	
	this.reset = function() {
		this.user = {
				id : '',
				name : '',
				password : '',
				email : '',
				contact : '',
				role : '',
				address : ''
		};
		$scope.myForm.$setPristine(); 
	};
	this.validateUser=function(user) {
		console.log("validateUser")
		UserService.validateUser(user)
		.then(
				function(d)
				{
					user=d;
					if(user.errorCode==200)
						{
						if(user.role=="admin")
							{
							alert("you are Admin")
							}
						$rootScope.currentuser=user;
						$cookieStore.put('currentuser',user)
						alert("Successful Login...")
						$location.path("/")
						}
					else
						{
						this.user={}
						
						id="";
						user.password="";
						
						alert("Invalid Credentials...Please Try Again")
						$location.path("/login")
						}
				},
				function(errResponse)
				{
					alert("Invalid Credentials...Please Try Again")
					$location.path("/login")
					console.error("user not logged in")
					
				}
				);
	};
	this.login=function() {
		{
			console.log("Validating User Login",this.user);
			this.validateUser(this.user);
			
		}
	};
		
		

}])